// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "lucio.com/order-service/src/domain/dto"
)

// CreateTransactionUC is an autogenerated mock type for the CreateTransactionUC type
type CreateTransactionUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: createTransactionUC
func (_m *CreateTransactionUC) Execute(createTransactionUC dto.CreateTransactionDTO) (*dto.TransactionCreatedDTO, error) {
	ret := _m.Called(createTransactionUC)

	var r0 *dto.TransactionCreatedDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(dto.CreateTransactionDTO) (*dto.TransactionCreatedDTO, error)); ok {
		return rf(createTransactionUC)
	}
	if rf, ok := ret.Get(0).(func(dto.CreateTransactionDTO) *dto.TransactionCreatedDTO); ok {
		r0 = rf(createTransactionUC)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.TransactionCreatedDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(dto.CreateTransactionDTO) error); ok {
		r1 = rf(createTransactionUC)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreateTransactionUC creates a new instance of CreateTransactionUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateTransactionUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateTransactionUC {
	mock := &CreateTransactionUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
