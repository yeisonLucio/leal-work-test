// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "lucio.com/order-service/src/domain/dto"
)

// AddCampaignToStoreUC is an autogenerated mock type for the AddCampaignToStoreUC type
type AddCampaignToStoreUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: createStoreCampaignDTO
func (_m *AddCampaignToStoreUC) Execute(createStoreCampaignDTO dto.CreateStoreCampaignDTO) (*dto.StoreCampaignCreatedDTO, error) {
	ret := _m.Called(createStoreCampaignDTO)

	var r0 *dto.StoreCampaignCreatedDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(dto.CreateStoreCampaignDTO) (*dto.StoreCampaignCreatedDTO, error)); ok {
		return rf(createStoreCampaignDTO)
	}
	if rf, ok := ret.Get(0).(func(dto.CreateStoreCampaignDTO) *dto.StoreCampaignCreatedDTO); ok {
		r0 = rf(createStoreCampaignDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.StoreCampaignCreatedDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(dto.CreateStoreCampaignDTO) error); ok {
		r1 = rf(createStoreCampaignDTO)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAddCampaignToStoreUC creates a new instance of AddCampaignToStoreUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAddCampaignToStoreUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *AddCampaignToStoreUC {
	mock := &AddCampaignToStoreUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
